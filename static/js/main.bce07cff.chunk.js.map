{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","props","Footer","year","Date","getFullYear","Note","className","title","content","onClick","delete","id","CreateArea","useState","note","setNote","isExpanded","setExpand","handleChange","event","target","name","value","onChange","placeholder","hidden","rows","Zoom","in","Fab","preventDefault","addClick","App","notesList","setNotesList","deleteNote","prevList","filter","index","map","noteItem","key","ReactDOM","render","document","getElementById"],"mappings":"2LASeA,MANf,SAAgBC,GACZ,OAAQ,gCACJ,4BAAI,kBAAC,IAAD,MAAJ,aCSOC,MAZf,WAEI,IACMC,GADO,IAAIC,MACCC,cAElB,OACI,gCACI,8CAAiBF,K,iBCSdG,MAff,SAAcL,GAMZ,OACE,yBAAKM,UAAU,QACb,4BAAKN,EAAMO,OACX,2BAAIP,EAAMQ,SACV,4BAAQC,QARZ,WACET,EAAMU,OAAOV,EAAMW,MAOa,kBAAC,IAAD,S,yCCgCrBC,MAxCf,SAAoBZ,GAAQ,IAAD,EAEDa,mBAAS,CAC/BN,MAAO,GACPC,QAAS,KAJc,mBAElBM,EAFkB,KAEZC,EAFY,OAOOF,oBAAS,GAPhB,mBAOlBG,EAPkB,KAONC,EAPM,KAUzB,SAASC,EAAaC,GAAQ,IAAD,EACHA,EAAMC,OAAtBC,EADmB,EACnBA,KAAMC,EADa,EACbA,MACdP,EAAQ,2BAAKD,GAAN,IAAY,CAACO,GAAOC,KAa7B,OACE,6BACE,0BAAMhB,UAAU,eACd,2BAAOiB,SAAUL,EAAcG,KAAK,QAAQG,YAAY,QAAQF,MAAOR,EAAKP,MAAOkB,QAAQT,IAC3F,8BAAUO,SAAUL,EAAcG,KAAK,UAAUG,YAAY,iBAAiBF,MAAOR,EAAKN,QAASC,QARzG,WACEQ,GAAU,IAO8GS,KAAMV,EAAa,EAAI,IAC3I,kBAACW,EAAA,EAAD,CAAMC,GAAIZ,IAAc,GACxB,kBAACa,EAAA,EAAD,CACEpB,QAhBR,SAAqBU,GAEnB,OADAA,EAAMW,iBACC,CAAC9B,EAAM+B,SAASjB,GAAOC,EAAQ,2BAAKD,GAAN,IAAYP,MAAO,GAAIC,QAAS,SAehE,kBAAC,IAAD,WCFMwB,MA9Bf,WAAgB,IAAD,EAEuBnB,mBAAS,IAFhC,mBAEJoB,EAFI,KAEOC,EAFP,KAUX,SAASC,EAAWxB,GAChBuB,GAAa,SAAAE,GACT,OAAQA,EAASC,QACb,SAACf,EAAOgB,GAAR,OAAkBA,IAAU3B,QAIxC,OACI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAYoB,SAfpB,SAAiBjB,GACboB,GAAa,SAAAE,GAAc,MAAM,GAAN,mBAAWA,GAAX,CAAqBtB,UAiB3CmB,EAAUM,KAAI,SAACC,EAAUF,GAAX,OAAsB,kBAAC,EAAD,CAAMG,IAAKH,EAAO3B,GAAI2B,EAAO5B,OAAQyB,EAAY5B,MAAOiC,EAASjC,MAAOC,QAASgC,EAAShC,aAE/H,kBAAC,EAAD,QC3BZkC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bce07cff.chunk.js","sourcesContent":["import React from \"react\";\r\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\r\n\r\nfunction Header(props) {\r\n    return (<header>\r\n        <h1><WbIncandescentIcon /> Keeper</h1>\r\n    </header>);\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n\r\n    const date = new Date();\r\n    const year = date.getFullYear();\r\n    \r\n    return (\r\n        <footer>\r\n            <p> Copyright Â© {year}</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Note(props) {\r\n\r\n  function handleClick(){\r\n    props.delete(props.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      <h1>{props.title}</h1>\r\n      <p>{props.content}</p>\r\n      <button onClick={handleClick}><DeleteIcon/></button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Note;\r\n","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\r\n  const [note, setNote] = useState({\r\n    title: \"\",\r\n    content: \"\"\r\n  });\r\n\r\n  const [isExpanded, setExpand] = useState(false);\r\n\r\n  // Create the new note while the user is typing\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setNote({ ...note, [name]: value });\r\n  };\r\n\r\n  // On submit, send the note to the addNote function to store it in the notesList table and render it (App.jsx)\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    return [props.addClick(note), setNote({ ...note, title: \"\", content: \"\" })];\r\n  }\r\n\r\n  function appear() {\r\n    setExpand(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"create-note\">\r\n        <input onChange={handleChange} name=\"title\" placeholder=\"Title\" value={note.title} hidden={isExpanded ? false : true}/>\r\n        <textarea onChange={handleChange} name=\"content\" placeholder=\"Take a note...\" value={note.content} onClick={appear} rows={isExpanded ? 3 : 1} />\r\n        <Zoom in={isExpanded && true}>\r\n        <Fab\r\n          onClick={handleClick}\r\n        ><AddIcon /></Fab>\r\n        </Zoom>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateArea;\r\n","import React, { useState } from \"react\"\r\nimport Header from \"./Header\"\r\nimport Footer from \"./Footer\"\r\nimport Note from \"./Note\"\r\nimport CreateArea from \"./CreateArea\"\r\n\r\nfunction App() {\r\n\r\n    const [notesList, setNotesList] = useState([])\r\n\r\n    // Add a note in the array notesList\r\n    function addNote(note) {\r\n        setNotesList(prevList => { return [...prevList, note] });\r\n    };\r\n\r\n    //Delete a note from the array notesList\r\n    function deleteNote(id) {\r\n        setNotesList(prevList => {\r\n            return (prevList.filter(\r\n                (value, index) => index !== id))\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <CreateArea addClick={addNote} />\r\n\r\n            {/* Map through the notesList table to render each note */}\r\n            {notesList.map((noteItem, index) => (<Note key={index} id={index} delete={deleteNote} title={noteItem.title} content={noteItem.content} />))}\r\n            \r\n            <Footer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}